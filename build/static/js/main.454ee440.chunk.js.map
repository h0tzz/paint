{"version":3,"sources":["store/canvasState.ts","store/toolState.ts","tools/Tool.ts","tools/Brush.ts","Components/Canvas.tsx","tools/Rect.ts","tools/Circle.ts","tools/Eraser.ts","tools/Line.ts","Components/ToolBar.tsx","Components/SettingBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["canvas","undoList","redoList","sessionid","ctx","makeAutoObservable","this","data","push","console","log","getContext","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","width","height","drawImage","tool","lineWidth","color","strokeColor","fillColor","Tool","destroyEvents","fillStyle","strokeStyle","onmousemove","onmouseup","onmousedown","Brush","mouseDown","listen","mouseMoveHandler","bind","mouseUpHandler","mouseDownHandler","e","x","pageX","target","offsetLeft","y","pageY","offsetTop","beginPath","moveTo","draw","lineTo","stroke","Canvas","observer","canvasRef","useRef","useEffect","canvasState","setCanvas","current","toolState","setTool","className","onMouseDown","pushToUndo","ref","Rect","startX","startY","saved","currentX","currentY","heigth","w","h","a","rect","fill","Error","Circle","canvasData","curentX","curentY","r","Math","sqrt","arc","PI","Eraser","Line","name","ToolBar","onClick","onChange","setStrokeColor","value","setFillColor","changeColor","type","undo","redo","document","createElement","href","download","body","appendChild","click","removeChild","SettingBar","htmlFor","setLineWidth","style","margin","id","defaultValue","min","max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPA0De,M,WAjDX,aAAe,yBANfA,YAMc,OALdC,SAAgB,GAKF,KAJdC,SAAgB,GAIF,KAHdC,eAGc,OAFdC,SAEc,EACVC,YAAmBC,M,6CAGvB,SAAUN,GACNM,KAAKN,OAASA,I,wBAElB,SAAWO,GACPD,KAAKL,SAASO,KAAKD,K,wBAGvB,SAAWA,GACPD,KAAKJ,SAASM,KAAKD,GACnBE,QAAQC,IAAIH,K,kBAGhB,WAAQ,IAAD,OACCH,EAAME,KAAKN,OAAOW,WAAW,MACjC,GAAIL,KAAKL,SAASW,OAAS,EAAG,CAC1B,IAAIC,EAAUP,KAAKL,SAASa,MAC5BR,KAAKJ,SAASM,KAAKF,KAAKN,OAAOe,aAC/B,IAAIC,EAAM,IAAIC,MACdD,EAAIE,IAAML,EACVG,EAAIG,OAAU,WACVf,EAAIgB,UAAU,EAAE,EAAG,EAAKpB,OAAOqB,MAAO,EAAKrB,OAAOsB,QAClDlB,EAAImB,UAAUP,EAAK,EAAG,EAAG,EAAKhB,OAAOqB,MAAO,EAAKrB,OAAOsB,cAG5DlB,EAAIgB,UAAU,EAAG,EAAGd,KAAKN,OAAOqB,MAAOf,KAAKN,OAAOsB,U,kBAI3D,WAAQ,IAAD,OACClB,EAAME,KAAKN,OAAOW,WAAW,MACjC,GAAIL,KAAKJ,SAASU,OAAS,EAAG,CAC1B,IAAIC,EAAUP,KAAKJ,SAASY,MAC5BR,KAAKL,SAASO,KAAKF,KAAKN,OAAOe,aAC/B,IAAIC,EAAM,IAAIC,MACdD,EAAIE,IAAML,EACVG,EAAIG,OAAU,WACVf,EAAIgB,UAAU,EAAE,EAAG,EAAKpB,OAAOqB,MAAO,EAAKrB,OAAOsB,QAClDlB,EAAImB,UAAUP,EAAK,EAAG,EAAG,EAAKhB,OAAOqB,MAAO,EAAKrB,OAAOsB,c,MCpBzD,M,WAnBX,aAAe,yBAFfE,UAEc,EACVnB,YAAmBC,M,2CAIvB,SAAQkB,GACJlB,KAAKkB,KAAOA,I,0BAEhB,SAAaH,GACTf,KAAKkB,KAAKC,WAAaJ,I,4BAE3B,SAAeK,GACXpB,KAAKkB,KAAKG,YAAcD,I,0BAE5B,SAAaA,GACTpB,KAAKkB,KAAKI,UAAYF,M,oBC1BTG,E,WAGjB,WAAY7B,GAA2B,yBAFvCA,YAEsC,OADtCI,SACsC,EAClCE,KAAKN,OAASA,EACdM,KAAKF,IAAMJ,EAAOW,WAAW,MAC7BL,KAAKwB,gB,2CAET,SAAcJ,GACVpB,KAAKF,IAAI2B,UAAYL,I,uBAEzB,SAAgBA,GACZpB,KAAKF,IAAI4B,YAAcN,I,qBAG3B,SAAcL,GACVf,KAAKF,IAAIqB,UAAYJ,I,2BAGzB,WACIf,KAAKN,OAAOiC,YAAc,KAC1B3B,KAAKN,OAAOkC,UAAY,KACxB5B,KAAKN,OAAOmC,YAAc,S,KClBbC,E,kDAIjB,WAAYpC,GAA2B,IAAD,8BAClC,cAAMA,IAHVqC,WAAqB,EAIjB,EAAKC,SAF6B,E,0CAKtC,WACIhC,KAAKN,OAAOiC,YAAc3B,KAAKiC,iBAAiBC,KAAKlC,MACrDA,KAAKN,OAAOkC,UAAY5B,KAAKmC,eAAeD,KAAKlC,MACjDA,KAAKN,OAAOmC,YAAc7B,KAAKoC,iBAAiBF,KAAKlC,Q,4BAIzD,SAAeqC,GACXrC,KAAK+B,WAAY,I,8BAGrB,SAAiBM,GACb,IAAIC,EAAWD,EAAEE,MAAQF,EAAEG,OAAOC,WAC9BC,EAAWL,EAAEM,MAAQN,EAAEG,OAAOI,UAClC5C,KAAK+B,WAAY,EACjB/B,KAAKF,IAAI+C,YACT7C,KAAKF,IAAIgD,OAAOR,EAAGI,K,8BAGvB,SAAiBL,GACb,IAAIC,EAAWD,EAAEE,MAAQF,EAAEG,OAAOC,WAC9BC,EAAWL,EAAEM,MAAQN,EAAEG,OAAOI,UAC/B5C,KAAK+B,WACJ/B,KAAK+C,KAAKT,EAAGI,K,kBAIrB,SAAKJ,EAASI,GACV1C,KAAKF,IAAIkD,OAAOV,EAAEI,GAClB1C,KAAKF,IAAImD,a,GAtCkB1B,G,OC8BpB2B,EAxBSC,aAAS,WAE7B,IAAMC,EAAYC,mBAElBC,qBAAU,WACNC,EAAYC,UAAUJ,EAAUK,SAChCC,EAAUC,QAAQ,IAAI7B,EAAMsB,EAAUK,YACvC,IAQH,OACI,qBAAKG,UAAW,SAAhB,SACI,wBAAQC,YAAa,WALzBN,EAAYO,WAAWV,EAAUK,QAAQhD,cAKUsD,IAAKX,EAAWrC,MAAO,IAAKC,OAAQ,W,+BCxB1EgD,E,kDASjB,WAAYtE,GAA2B,IAAD,8BAClC,cAAMA,IANVqC,WAAqB,EAKiB,EAJtCkC,YAIsC,IAHtCC,YAGsC,IAFtCC,WAEsC,EAElC,EAAKnC,SAF6B,E,0CAKtC,WACIhC,KAAKN,OAAOiC,YAAc3B,KAAKiC,iBAAiBC,KAAKlC,MACrDA,KAAKN,OAAOkC,UAAY5B,KAAKmC,eAAeD,KAAKlC,MACjDA,KAAKN,OAAOmC,YAAc7B,KAAKoC,iBAAiBF,KAAKlC,Q,4BAIzD,SAAeqC,GACXrC,KAAK+B,WAAY,I,8BAGrB,SAAiBM,GACbrC,KAAK+B,WAAY,EACjB/B,KAAKF,IAAI+C,YACT7C,KAAKiE,OAAS5B,EAAEE,MAAQF,EAAEG,OAAOC,WACjCzC,KAAKkE,OAAS7B,EAAEM,MAAQN,EAAEG,OAAOI,UACjC5C,KAAKmE,MAAQnE,KAAKN,OAAOe,c,8BAG7B,SAAiB4B,GACb,IAAI+B,EAAW/B,EAAEE,MAAQF,EAAEG,OAAOC,WAC9B4B,EAAWhC,EAAEM,MAAQN,EAAEG,OAAOI,UAC9B7B,EAAQqD,EAAWpE,KAAKiE,OACxBK,EAASD,EAAWrE,KAAKkE,OAC1BlE,KAAK+B,WACJ/B,KAAK+C,KAAK/C,KAAKiE,OAAOjE,KAAKkE,OAAQnD,EAAOuD,K,kBAIlD,SAAKhC,EAASI,EAAS6B,EAASC,GAAW,IAAD,OAChC9D,EAAM,IAAIC,MAChBD,EAAIE,IAAMZ,KAAKmE,MACfzD,EAAIG,OAAJ,sBAAa,sBAAA4D,EAAA,sDACT,EAAK3E,IAAIgB,UAAU,EAAE,EAAG,EAAKpB,OAAOqB,MAAO,EAAKrB,OAAOsB,QACvD,EAAKlB,IAAImB,UAAUP,EAAK,EAAG,EAAG,EAAKhB,OAAOqB,MAAO,EAAKrB,OAAOsB,QAC7D,EAAKlB,IAAI+C,YACT,EAAK/C,IAAI4E,KAAKpC,EAAEI,EAAE6B,EAAEC,GACpB,EAAK1E,IAAI6E,OACT,EAAK7E,IAAImD,SANA,8C,yBA7CjB,SAAkBnD,EAA+BwC,EAAQI,EAAQ3B,EAAYC,EAAaI,GACtF,MAAM,IAAIwD,MAAM,+B,GAFUrD,GCAbsD,E,kDAOjB,WAAYnF,GAA2B,IAAD,8BAClC,cAAMA,IANVqC,eAKsC,IAJtCkC,YAIsC,IAHtCC,YAGsC,IAFtCC,WAEsC,EAElC,EAAKnC,SAF6B,E,0CAKtC,WACIhC,KAAKN,OAAOiC,YAAc3B,KAAKiC,iBAAiBC,KAAKlC,MACrDA,KAAKN,OAAOmC,YAAc7B,KAAKoC,iBAAiBF,KAAKlC,MACrDA,KAAKN,OAAOkC,UAAY5B,KAAKmC,eAAeD,KAAKlC,Q,8BAGrD,SAAiBqC,GACbrC,KAAK+B,WAAY,EACjB,IAAI+C,EAAa9E,KAAKN,OAAOe,YAC7BT,KAAKF,IAAI+C,YACT7C,KAAKiE,OAAS5B,EAAEE,MAAMF,EAAEG,OAAOC,WAC/BzC,KAAKkE,OAAS7B,EAAEM,MAAMN,EAAEG,OAAOI,UAC/B5C,KAAKmE,MAAQW,I,4BAGjB,SAAezC,GACXrC,KAAK+B,WAAY,I,8BAGrB,SAAiBM,GACb,GAAGrC,KAAK+B,UAAW,CACf,IAAIgD,EAAW1C,EAAEE,MAAMF,EAAEG,OAAOC,WAC5BuC,EAAW3C,EAAEM,MAAMN,EAAEG,OAAOI,UAC5B7B,EAAQgE,EAAQ/E,KAAKiE,OACrBjD,EAASgE,EAAQhF,KAAKkE,OACtBe,EAAIC,KAAKC,KAAK,SAAApE,EAAO,GAAP,SAAWC,EAAQ,IACrChB,KAAK+C,KAAK/C,KAAKiE,OAAQjE,KAAKkE,OAAQe,M,kBAI5C,SAAK3C,EAAWI,EAAWuC,GAAY,IAAD,OAC5BvE,EAAM,IAAIC,MAChBD,EAAIE,IAAMZ,KAAKmE,MACfzD,EAAIG,OAAJ,sBAAa,sBAAA4D,EAAA,sDACT,EAAK3E,IAAIgB,UAAU,EAAE,EAAG,EAAKpB,OAAOqB,MAAO,EAAKrB,OAAOsB,QACvD,EAAKlB,IAAImB,UAAUP,EAAK,EAAG,EAAG,EAAKhB,OAAOqB,MAAO,EAAKrB,OAAOsB,QAC7D,EAAKlB,IAAI+C,YACT,EAAK/C,IAAIsF,IAAI9C,EAAGI,EAAGuC,EAAG,EAAG,EAAEC,KAAKG,IAChC,EAAKvF,IAAI6E,OACT,EAAK7E,IAAImD,SANA,+C,GA7Ce1B,GCDf+D,E,0JAEjB,SAAKhD,EAAWI,GACZ1C,KAAKF,IAAI4B,YAAc,QACvB1B,KAAKF,IAAIkD,OAAOV,EAAGI,GACnB1C,KAAKF,IAAImD,a,GALmBnB,GCCfyD,E,kDAOjB,WAAY7F,GAA4B,IAAD,8BACnC,cAAMA,IAPVqC,eAMuC,IALvCqC,cAKuC,IAJvCC,cAIuC,IAHvCmB,UAGuC,IAFvCrB,WAEuC,EAEnC,EAAKnC,SACL,EAAKwD,KAAO,OAHuB,E,0CAMvC,WACIxF,KAAKN,OAAOmC,YAAc7B,KAAKoC,iBAAiBF,KAAKlC,MACrDA,KAAKN,OAAOkC,UAAY5B,KAAKmC,eAAeD,KAAKlC,MACjDA,KAAKN,OAAOiC,YAAc3B,KAAKiC,iBAAiBC,KAAKlC,Q,8BAGzD,SAAiBqC,GACbrC,KAAK+B,WAAY,EACjB/B,KAAKoE,SAAW/B,EAAEE,MAAQF,EAAEG,OAAOC,WACnCzC,KAAKqE,SAAWhC,EAAEM,MAAQN,EAAEG,OAAOI,UACnC5C,KAAKF,IAAI+C,YACT7C,KAAKF,IAAIgD,OAAO9C,KAAKoE,SAAUpE,KAAKqE,UACpCrE,KAAKmE,MAAQnE,KAAKN,OAAOe,c,4BAG7B,SAAe4B,GACXrC,KAAK+B,WAAY,I,8BAGrB,SAAiBM,GACTrC,KAAK+B,WACL/B,KAAK+C,KAAKV,EAAEE,MAAQF,EAAEG,OAAOC,WAAYJ,EAAEM,MAAQN,EAAEG,OAAOI,a,kBAKpE,SAAKN,EAAWI,GAAY,IAAD,OACjBhC,EAAM,IAAIC,MAChBD,EAAIE,IAAMZ,KAAKmE,MACfzD,EAAIG,OAAJ,sBAAa,sBAAA4D,EAAA,sDACT,EAAK3E,IAAIgB,UAAU,EAAG,EAAG,EAAKpB,OAAOqB,MAAO,EAAKrB,OAAOsB,QACxD,EAAKlB,IAAImB,UAAUP,EAAK,EAAG,EAAG,EAAKhB,OAAOqB,MAAO,EAAKrB,OAAOsB,QAC7D,EAAKlB,IAAI+C,YACT,EAAK/C,IAAIgD,OAAO,EAAKsB,SAAU,EAAKC,UACpC,EAAKvE,IAAIkD,OAAOV,EAAGI,GACnB,EAAK5C,IAAImD,SANA,+C,GA1Ca1B,GC4CnBkE,EAjCU,WAkBrB,OACI,sBAAK7B,UAAW,UAAhB,UACI,wBAAQA,UAAW,qBAAsB8B,QAAS,kBAAMhC,EAAUC,QAAQ,IAAI7B,EAAMyB,EAAY7D,YAChG,wBAAQkE,UAAW,oBAAqB8B,QAAS,kBAAMhC,EAAUC,QAAQ,IAAIK,EAAKT,EAAY7D,YAC9F,wBAAQkE,UAAW,sBAAuB8B,QAAS,kBAAMhC,EAAUC,QAAQ,IAAIkB,EAAOtB,EAAY7D,YAClG,wBAAQkE,UAAW,sBAAuB8B,QAAS,kBAAMhC,EAAUC,QAAQ,IAAI2B,EAAO/B,EAAY7D,YAClG,wBAAQkE,UAAW,oBAAqB8B,QAAS,kBAAMhC,EAAUC,QAAQ,IAAI4B,EAAKhC,EAAY7D,YAC9F,uBAAOiG,SAAU,SAAAtD,GAAC,OAvBN,SAACA,GACjBqB,EAAUkC,eAAevD,EAAEG,OAAOqD,OAClCnC,EAAUoC,aAAazD,EAAEG,OAAOqD,OAqBNE,CAAY1D,IAAI2D,KAAM,QAASpC,UAAW,uBAChE,wBAAQA,UAAU,oBAAoB8B,QAAS,kBAAMnC,EAAY0C,UACjE,wBAAQrC,UAAU,oBAAoB8B,QAAS,kBAAMnC,EAAY2C,UACjE,wBAAQtC,UAAU,oBAAoB8B,QAAS,kBArBtC,WACb,IAAMnF,EAAUgD,EAAY7D,OAAOe,YACnCN,QAAQC,IAAIG,GACZ,IAAMkE,EAAI0B,SAASC,cAAc,KACjC3B,EAAE4B,KAAO9F,EACTkE,EAAE6B,SAAW/C,EAAY1D,UAAY,OACrCsG,SAASI,KAAKC,YAAY/B,GAC1BA,EAAEgC,QACFN,SAASI,KAAKG,YAAYjC,GAa+B6B,UCxBlDK,EAda,WACxB,OACI,sBAAK/C,UAAU,cAAf,UACI,uBAAOgD,QAAQ,aAAf,uFACA,uBACIjB,SAAU,SAAAtD,GAAC,OAAIqB,EAAUmD,aAAaxE,EAAEG,OAAOqD,QAC/CiB,MAAO,CAACC,OAAQ,UAChBC,GAAG,aACHhB,KAAK,SAASiB,aAAc,EAAGC,IAAK,EAAGC,IAAK,KAChD,uBAAOP,QAAQ,eAAf,iFACA,uBAAOjB,SAAU,SAAAtD,GAAC,OAAIqB,EAAUkC,eAAevD,EAAEG,OAAOqD,QAAQmB,GAAG,eAAehB,KAAK,cCEpFoB,MAVf,WACE,OACE,sBAAKxD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSyD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BZ,M","file":"static/js/main.454ee440.chunk.js","sourcesContent":["import {makeAutoObservable} from \"mobx\";\r\n\r\nclass CanvasState {\r\n    canvas: HTMLCanvasElement;\r\n    undoList: any = [];\r\n    redoList: any = [];\r\n    sessionid: string;\r\n    ctx: any;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setCanvas(canvas:HTMLCanvasElement) {\r\n        this.canvas = canvas\r\n    }\r\n    pushToUndo(data:any) {\r\n        this.undoList.push(data)\r\n    }\r\n\r\n    pushToRedo(data:any) {\r\n        this.redoList.push(data)\r\n        console.log(data)\r\n    }\r\n\r\n    undo() {\r\n        let ctx = this.canvas.getContext('2d')  as CanvasRenderingContext2D\r\n        if (this.undoList.length > 0) {\r\n            let dataUrl = this.undoList.pop()\r\n            this.redoList.push(this.canvas.toDataURL())\r\n            let img = new Image()\r\n            img.src = dataUrl\r\n            img.onload =  () => {\r\n                ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            }\r\n        } else {\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n        }\r\n    }\r\n\r\n    redo() {\r\n        let ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D\r\n        if (this.redoList.length > 0) {\r\n            let dataUrl = this.redoList.pop()\r\n            this.undoList.push(this.canvas.toDataURL())\r\n            let img = new Image()\r\n            img.src = dataUrl\r\n            img.onload =  () => {\r\n                ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new CanvasState()","import {makeAutoObservable} from \"mobx\";\r\n\r\n// tools\r\nimport Brush from \"../tools/Brush\";\r\nimport Circle from \"../tools/Circle\";\r\nimport Rect from \"../tools/Rect\";\r\n\r\n\r\nclass ToolState {\r\n    tool: Brush | Rect | Circle\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n\r\n    setTool(tool: Brush | Rect | Circle) {\r\n        this.tool = tool\r\n    }\r\n    setLineWidth(width: string): void {\r\n        this.tool.lineWidth = +width\r\n    }\r\n    setStrokeColor(color: string): void  {\r\n        this.tool.strokeColor = color\r\n    }\r\n    setFillColor(color: string): void  {\r\n        this.tool.fillColor = color\r\n    }\r\n}\r\n\r\nexport default new ToolState()","export default class Tool {\r\n    canvas: HTMLCanvasElement\r\n    ctx: CanvasRenderingContext2D\r\n    constructor(canvas:HTMLCanvasElement) {\r\n        this.canvas = canvas\r\n        this.ctx = canvas.getContext('2d') as CanvasRenderingContext2D\r\n        this.destroyEvents()\r\n    }\r\n    set fillColor(color: string | CanvasGradient | CanvasPattern) {\r\n        this.ctx.fillStyle = color\r\n    }\r\n    set strokeColor(color: string | CanvasGradient | CanvasPattern) {\r\n        this.ctx.strokeStyle = color\r\n    }\r\n\r\n    set lineWidth(width: number) {\r\n        this.ctx.lineWidth = width\r\n    }\r\n\r\n    destroyEvents () {\r\n        this.canvas.onmousemove = null\r\n        this.canvas.onmouseup = null\r\n        this.canvas.onmousedown = null\r\n    }\r\n}","import Tool from \"./Tool\";\r\n\r\n\r\n\r\nexport default class Brush extends Tool {\r\n\r\n    mouseDown: boolean = false;\r\n\r\n    constructor(canvas:HTMLCanvasElement) {\r\n        super(canvas);\r\n        this.listen()\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n\r\n    }\r\n\r\n    mouseUpHandler(e: MouseEvent):void {\r\n        this.mouseDown = false\r\n\r\n    }\r\n    mouseDownHandler(e: any):void {\r\n        let x:number = e.pageX - e.target.offsetLeft\r\n        let y:number = e.pageY - e.target.offsetTop\r\n        this.mouseDown = true\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(x, y)\r\n\r\n    }\r\n    mouseMoveHandler(e:any):void {\r\n        let x:number = e.pageX - e.target.offsetLeft\r\n        let y:number = e.pageY - e.target.offsetTop\r\n        if(this.mouseDown) {\r\n            this.draw(x, y)\r\n        }\r\n    }\r\n\r\n    draw(x:number,y:number) {\r\n        this.ctx.lineTo(x,y)\r\n        this.ctx.stroke()\r\n    }\r\n}","import React, {useEffect, useRef} from \"react\";\r\nimport '../styles/canvas.scss'\r\nimport {observer} from \"mobx-react-lite\";\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\n\r\n// tools\r\nimport Brush from \"../tools/Brush\";\r\n\r\n\r\nconst Canvas:React.FC = observer(() => {\r\n\r\n    const canvasRef = useRef() as React.MutableRefObject<HTMLCanvasElement>;\r\n\r\n    useEffect(() => {\r\n        canvasState.setCanvas(canvasRef.current)\r\n        toolState.setTool(new Brush(canvasRef.current))\r\n    }, [])\r\n\r\n\r\n\r\n    const mouseDownHandler = () => {\r\n        canvasState.pushToUndo(canvasRef.current.toDataURL())\r\n    }\r\n\r\n    return  (\r\n        <div className={\"canvas\"}>\r\n            <canvas onMouseDown={() => mouseDownHandler()} ref={canvasRef} width={600} height={400} />\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default Canvas","import Tool from \"./Tool\";\r\n\r\n\r\nexport default class Rect extends Tool {\r\n    static staticDraw(ctx: CanvasRenderingContext2D, x: any, y: any, width: any, height: any, color: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    mouseDown: boolean = false;\r\n    startX: number;\r\n    startY: number;\r\n    saved: string;\r\n\r\n    constructor(canvas:HTMLCanvasElement) {\r\n        super(canvas);\r\n        this.listen()\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n\r\n    }\r\n\r\n    mouseUpHandler(e: MouseEvent):void {\r\n        this.mouseDown = false\r\n\r\n    }\r\n    mouseDownHandler(e: any):void {\r\n        this.mouseDown = true\r\n        this.ctx.beginPath()\r\n        this.startX = e.pageX - e.target.offsetLeft\r\n        this.startY = e.pageY - e.target.offsetTop\r\n        this.saved = this.canvas.toDataURL()\r\n\r\n    }\r\n    mouseMoveHandler(e:any):void {\r\n        let currentX = e.pageX - e.target.offsetLeft\r\n        let currentY = e.pageY - e.target.offsetTop\r\n        let width = currentX - this.startX\r\n        let heigth = currentY - this.startY\r\n        if(this.mouseDown) {\r\n            this.draw(this.startX,this.startY, width, heigth)\r\n        }\r\n    }\r\n\r\n    draw(x:number,y:number,w:number,h:number) {\r\n        const img = new Image()\r\n        img.src = this.saved\r\n        img.onload = async () => {\r\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.rect(x,y,w,h)\r\n            this.ctx.fill()\r\n            this.ctx.stroke()\r\n        }\r\n\r\n    }\r\n}","import Tool from \"./Tool\";\r\n\r\n\r\nexport default class Circle extends Tool {\r\n\r\n    mouseDown: boolean;\r\n    startX: number;\r\n    startY: number;\r\n    saved: string;\r\n\r\n    constructor(canvas:HTMLCanvasElement) {\r\n        super(canvas);\r\n        this.listen()\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n    }\r\n\r\n    mouseDownHandler(e: any) {\r\n        this.mouseDown = true\r\n        let canvasData = this.canvas.toDataURL()\r\n        this.ctx.beginPath()\r\n        this.startX = e.pageX-e.target.offsetLeft\r\n        this.startY = e.pageY-e.target.offsetTop\r\n        this.saved = canvasData\r\n    }\r\n\r\n    mouseUpHandler(e:any) {\r\n        this.mouseDown = false\r\n    }\r\n\r\n    mouseMoveHandler(e:any) {\r\n        if(this.mouseDown) {\r\n            let curentX =  e.pageX-e.target.offsetLeft\r\n            let curentY =  e.pageY-e.target.offsetTop\r\n            let width = curentX-this.startX\r\n            let height = curentY-this.startY\r\n            let r = Math.sqrt(width**2 + height**2)\r\n            this.draw(this.startX, this.startY, r)\r\n        }\r\n    }\r\n\r\n    draw(x: number, y: number, r: number) {\r\n        const img = new Image()\r\n        img.src = this.saved\r\n        img.onload = async () => {\r\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.arc(x, y, r, 0, 2*Math.PI)\r\n            this.ctx.fill()\r\n            this.ctx.stroke()\r\n        }\r\n    }\r\n}","import Brush from \"./Brush\";\r\n\r\nexport default class Eraser extends Brush {\r\n\r\n    draw(x: number, y: number) {\r\n        this.ctx.strokeStyle = \"white\"\r\n        this.ctx.lineTo(x, y)\r\n        this.ctx.stroke()\r\n    }\r\n}","import Tool from \"./Tool\";\r\n\r\n\r\nexport default class Line extends Tool {\r\n    mouseDown: boolean;\r\n    currentX: number;\r\n    currentY: number;\r\n    name: string;\r\n    saved: string;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super(canvas);\r\n        this.listen()\r\n        this.name = 'Line'\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n    }\r\n\r\n    mouseDownHandler(e:any) {\r\n        this.mouseDown = true\r\n        this.currentX = e.pageX - e.target.offsetLeft\r\n        this.currentY = e.pageY - e.target.offsetTop\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(this.currentX, this.currentY)\r\n        this.saved = this.canvas.toDataURL()\r\n    }\r\n\r\n    mouseUpHandler(e:any) {\r\n        this.mouseDown = false\r\n    }\r\n\r\n    mouseMoveHandler(e:any) {\r\n        if (this.mouseDown) {\r\n            this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\r\n        }\r\n    }\r\n\r\n\r\n    draw(x: number, y: number) {\r\n        const img = new Image()\r\n        img.src = this.saved\r\n        img.onload = async () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(this.currentX, this.currentY)\r\n            this.ctx.lineTo(x, y)\r\n            this.ctx.stroke()\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../styles/toolbar.scss'\r\n\r\n// state\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\n\r\n// tools\r\nimport Brush from \"../tools/Brush\";\r\nimport Rect from \"../tools/Rect\";\r\nimport Circle from \"../tools/Circle\";\r\nimport Eraser from \"../tools/Eraser\";\r\nimport Line from \"../tools/Line\";\r\n\r\nconst ToolBar:React.FC = () => {\r\n\r\n    const changeColor = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        toolState.setStrokeColor(e.target.value)\r\n        toolState.setFillColor(e.target.value)\r\n    }\r\n\r\n    const download = () => {\r\n        const dataUrl = canvasState.canvas.toDataURL()\r\n        console.log(dataUrl)\r\n        const a = document.createElement('a')\r\n        a.href = dataUrl\r\n        a.download = canvasState.sessionid + \".jpg\"\r\n        document.body.appendChild(a)\r\n        a.click()\r\n        document.body.removeChild(a)\r\n    }\r\n\r\n    return  (\r\n        <div className={\"toolbar\"}>\r\n            <button className={\"toolbar__btn brush\"} onClick={() => toolState.setTool(new Brush(canvasState.canvas))} />\r\n            <button className={\"toolbar__btn rect\"} onClick={() => toolState.setTool(new Rect(canvasState.canvas))} />\r\n            <button className={\"toolbar__btn circle\"} onClick={() => toolState.setTool(new Circle(canvasState.canvas))} />\r\n            <button className={\"toolbar__btn eraser\"} onClick={() => toolState.setTool(new Eraser(canvasState.canvas))} />\r\n            <button className={\"toolbar__btn line\"} onClick={() => toolState.setTool(new Line(canvasState.canvas))} />\r\n            <input onChange={e => changeColor(e)} type={\"color\"} className={\"toolbar__btn color\"} />\r\n            <button className=\"toolbar__btn undo\" onClick={() => canvasState.undo()}/>\r\n            <button className=\"toolbar__btn redo\" onClick={() => canvasState.redo()}/>\r\n            <button className=\"toolbar__btn save\" onClick={() => download()}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar","import React from \"react\";\r\nimport toolState from \"../store/toolState\";\r\nimport '../styles/toolbar.scss'\r\n\r\nconst SettingBar:React.FC = () => {\r\n    return (\r\n        <div className=\"setting-bar\">\r\n            <label htmlFor=\"line-width\">Толщина линии</label>\r\n            <input\r\n                onChange={e => toolState.setLineWidth(e.target.value)}\r\n                style={{margin: '0 10px'}}\r\n                id=\"line-width\"\r\n                type=\"number\" defaultValue={1} min={1} max={50}/>\r\n            <label htmlFor=\"stroke-color\">Цвет обводки</label>\r\n            <input onChange={e => toolState.setStrokeColor(e.target.value)} id=\"stroke-color\" type=\"color\"/>\r\n        </div>\r\n    );\r\n};\r\nexport default SettingBar","import React from 'react';\nimport './styles/app.scss';\nimport Canvas from \"./Components/Canvas\";\nimport ToolBar from \"./Components/ToolBar\";\nimport SettingBar from \"./Components/SettingBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToolBar />\n      <SettingBar />\n      <Canvas  />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}